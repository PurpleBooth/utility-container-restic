on:
  push:
  workflow_dispatch:
  pull_request:

name: Pipeline

jobs:
  shell-check:
    uses: PurpleBooth/common-pipelines/.github/workflows/shell-check.yml@main

  docker-build:
    uses: PurpleBooth/common-pipelines/.github/workflows/docker-build.yml@main

  check-conventional-commits:
    uses: armakuni/github-actions/.github/workflows/check-conventional-commits.yml@11f2a137ef0371b345e6ef3eb19826cd1250bb06 # v0.19.6

  lint-pipeline:
    uses: armakuni/github-actions/.github/workflows/lint-pipeline.yml@11f2a137ef0371b345e6ef3eb19826cd1250bb06 # v0.19.6


  all-tests-succeeded:
    needs:
      - shell-check
      - docker-build
      - check-conventional-commits
      - lint-pipeline
    runs-on: ubuntu-latest
    steps:
      - run: "true"
        shell: bash

  release:
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    needs:
      - all-tests-succeeded
    outputs:
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Get tags
        run: git fetch --tags origin
      - uses: taiki-e/cache-cargo-install-action@4d586f211d9b0bca9e7b59e57e2a0febf36c0929 # v2.1.1
        with:
          tool: cargo-edit
      - uses: armakuni/github-actions/setup-cocogitto@11f2a137ef0371b345e6ef3eb19826cd1250bb06 # v0.19.6
      - id: previous_version
        run: |
          cog get-version | tee .version
          echo "previous_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash
      - name: Semver release
        id: release
        run: |
          git config --global user.name "cog-bot"
          git config --global user.email "cog@example.com"
          cog bump --auto
      - id: current_version
        run: |
          cog get-version | tee .version
          echo "current_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
          rm .version
        shell: bash


  docker-push:
    permissions:
      attestations: write
      packages: write
      id-token: write
      contents: read
    if: needs.release.outputs.current_version != needs.release.outputs.previous_version
    needs:
      - release
    uses: PurpleBooth/common-pipelines/.github/workflows/docker-push.yml@main
    with:
      current_version: ${{ needs.release.outputs.current_version }}
